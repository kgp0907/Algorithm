#include <iostream>
#include<queue>
using namespace std;
#define MAX 1001
bool visit[MAX];
int arr[MAX][MAX];
queue<int> q;
int n, m, V;
int a, b;
int c;
void reset() {
	for (int i = 0; i <=n; i++) {
		visit[i] = 0;
	}
}

void dfs(int v) {
	visit[v] = true;
	cout << v << ' ';
	for (int i = 1; i <= n; i++) {
		if (!visit[i] && arr[v][i]) {
			dfs(i);
		}
	}
}
void bfs(int v) {
	visit[v] = true;
	q.push(v);
	cout << v << ' ';

	while (!q.empty())
	{
		v = q.front();
		q.pop();
		for (int i = 1; i <= n; i++) {
			if (!visit[i] && arr[v][i]) {
				visit[i] = true;
				q.push(i);
				cout << i << ' ';
			}
		}
		
	}
}

int main() {
	cin >> n >> m >> V;

	for (int i = 0; i < m; i++) {
		cin >> a >> b;
		arr[a][b] = 1;
		arr[b][a] = 1;
	}
	reset();
	dfs(V);
	reset();
	cout << "\n";
	bfs(V);

}
