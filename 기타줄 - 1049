#include <iostream>
using namespace std;

int main() {
	int N = 0, M = 0, x = 0, y = 0;
	int set = 1000, single = 1000;
	cin >> N >> M;

	while (M--) {
		cin >> x >> y;
		set = min(set, x);
		single = min(single, y);
	}

	cout << min((N / 6 + 1) * set, min(N / 6 * set + N % 6 * single, N * single)) << '\n';

	//12 2 24        16+12   4 3 12 
}



초반 시간초과 코드

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int n, m = 0;
int a, b = 0;
int cost = 0;
vector<int> vec1;
vector<int> vec2;
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cin >> n >> m;

	for (int i = 0; i < m; i++) {
		cin >> a >> b;
		//vec.push_back({ a,b }); //세트가격 낱개 가격
		vec1.push_back(a);
		vec2.push_back(b);
	}

	sort(vec1.begin(), vec1.end());
	sort(vec2.begin(), vec2.end());
	int n1 = vec2[0] * 6; //낱개
	int n2 = vec1[0];
	while (n>0)
	{
	
		int n3 = vec2[0] * n;
		if (n>=6) {

			if (n1 >= n2) {
				cost += n2;
			}
			else {
				cost += n1;		
			}
			n -= 6;
		}

		else {
			if (n3 <= n2) {
				cost += n3;
				n -= n3;
			}
			else {
				cost += n2;
				n -= n2;
			}
		}

	}

	cout << cost;
	
	//6개 이상인경우 세트값 제일싼거비교, 낱개비교
	//6개미만인경우 세트값 제일싼거랑 낱장*남은거 해서 비교

}
