#include <cstdio>
#include <vector>
#include <cmath>
#include<iostream>
using namespace std;
int dx[4] = { 1,-1,0,0 };
int dy[4] = { 0,0,1,-1 };
int n, m;
int dp[500][500];
int arr[501][501];
int cnt = 0;

int dfs(int x,int y) {
	
	if (arr[x][y] == arr[n-1][m-1]) {
		return 1;
	}
	if (dp[x][y] != -1)
		return dp[x][y];

	dp[x][y] = 0;

	for (int i = 0; i < 4; i++) {
		int nx = dx[i] + x;
		int ny = dy[i] + y;

		if (nx >= 0 && ny >= 0 && nx < n && ny < m) {
			if (arr[x][y] > arr[nx][ny]) {
				dp[x][y]=dp[x][y]+ dfs(nx, ny);
			}
		}
	}
	return dp[x][y];
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> arr[i][j];
			dp[i][j] = -1;
		}
	}

	
	cout << dfs(0,0);
}
