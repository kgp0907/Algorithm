#include<cstdio>
#include<vector>
#include<algorithm>
#include<iostream>
#include<cstring>
#include<queue>
using namespace std;
#define MAX 100001
int n, k;
int result = 0;
queue<pair<int,int>> q;
int cnt = 0;
int visit[MAX];

int bfs(int n,int k) {

	visit[n] = true;
	q.push({n,0});

	while (!q.empty())
	{	
		int line = q.front().first;
		int time = q.front().second;
		q.pop();

		if (line == k) {
			return time;
		}
		if (!visit[line + 1] && line +1 < MAX) {
			q.push({ line + 1,time + 1 });
			visit[line +1] = true;		
		}
		
		if (!visit[line -1]&&line-1>=0) {
			q.push({ line - 1,time + 1 });
			visit[line -1] = true;
		
		}
		if (!visit[line * 2] && line * 2 < MAX) {
			q.push({ line * 2,time + 1 });
			visit[line * 2] = true;
		
		}
	}

}

int main() {
	cin >> n >> k;

	cout << bfs(n,k);
}
