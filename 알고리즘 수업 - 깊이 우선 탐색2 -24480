#include <iostream>
#include<vector>
#include <algorithm>
#include<queue>
using namespace std;
#define  INF  987654321
using namespace std;
int vis[100001], idx = 1;
vector<vector<int>> arr(100001);
void dfs(int node) {
	if (vis[node]) return;
	vis[node] = idx++;
	for (int x : arr[node]) {
		dfs(x);
	}
}
int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int n, m, a, b, s;
	cin >> n >> m >> s;
	for (int i = 0; i < m; i++) {
		cin >> a >> b;
		arr[a].push_back(b);
		arr[b].push_back(a);
	}
	for (int i = 1; i <= n; i++) {
		sort(arr[i].begin(), arr[i].end(),greater<int>());
	}
	dfs(s);
	for (int i = 1; i <= n; i++) {
		cout << vis[i] << "\n";
	}
}
